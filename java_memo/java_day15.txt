day15

java.lang 패키지 : import 없이 사용할 수 있다!
  1. Object
  2. String
  3. StringBuffer
  4. Math
	Math.random() : 난수 출력하기
	등장하고 있는 메서들은 모두 static 으로 되어 있다!

	Math.round() : 인자로 실수값을 넘기면 소수점 첫째자리에서 반올림한 정수값을 반환 한다.
	- Math.round(5.55) -> 리턴값은 6이 된다!
	- Math.round(-5.5) -> 리턴값은 -6 이 된다
	- Math.abs(-5)     -> 리턴값은 5가 된다
	- Math.ceil(10.1)  -> 소수점 자리에 값이 존해하면, 올림! 리턴값은 double 11.0 결과값
	- Math.max(10,5)   -> 두 값을 비교해서 큰값을 리턴한다. 10
	- Math.max(9.5, 9.50001)  ->  9.50001 이 큰 값이니까, 두번째 인자값이 결과값이다!
	- Math.floor(10.8)  ->  소수점 값을 버림! 결과값 10.0 이 리턴된다.
	- Math.floor(-10.8) ->  소수점 값을 버림! -> 음수에서는 버림으로 해서 더 큰값이 발생된다!
				-10.8 -> .8 을 버리면 -10 이 된다(x)
					 .8 을 버림으로써... -10이 아니라 -11로 변경된다!
	- max() <---> min()
	- Math.random()  :  new Random().nextInt()
-----------------------------------------------------------------------------------
  5. wrapper 클래스 (Integer, Character, Boolean...)

	기본자료형을 객체로 감싸다, 포장하다
	기본 자료형들을 객체로 변환시켜서 사용해야 할 때가 있다!
	이때, wrapper 클래스를 이용해서 "기본자료형" 들을 "객체"로 만든 후에 사용하면 된다!
		특히, 컬렉션 프레임워크에서 보게 될 예정이다!
	int
	float
	double
	char
	boolean

=======================================================================================
* inner 클래스 : 클래스 내부에 또 다른 클래스를 선언해서 사용하는 것
		(직접 설계하는 일은 거의 없다)

	class Outer{
		int a;
		int b;
		Outer(){}
			
		class Inner{

		}
		
	}

  내부(inner) 클래스 종류
	1. static : static class Inner{}
	2. local  : void fct(){   class A{}	}
	3. 인스턴스  : class Out{	  class Inner	}
	4. 익명 내부 클래스(*****) - 반드시 숙지하고 넘어가야 한다!
				-이벤트 처리할 때 자주 등장!

		new 생성(){
			
			{} 부분을 "익명 클래스" 라고 한다.
			   클래스 이름이 있어야하는 없어서 "익명 클래스"라고 한다
		};

  내부 클래스를 사용하는 이유
	1. 클래스 내부에서 소스 코드의 복잡성을 줄일 수 있다.
		- 멤버들을 쉽게 접근할 수 있는 장점이 있다.
		
	class Outer{
		int kor;
		int eng;

		class Inner{
			kor, eng에 쉽게 접근하다!
			kor = 100;
			eng = 100;
		}
	
	}

	























































